What happens when you initialize a repository? Why do you need to do it?

    It creates metadata files in order to be able to do versioning using git.
    You need to do it because a repository isn't linked to git and ready for
    versioning by default.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area let's you choose which files you want to commit from the
  working directory to the git repository so it is then tracked. It allows you
  to do small commits concerning only the files that were concerned by changes

How can you use the staging area to make sure you have one commit per logical change?

  Check the diff between the working directory and the staging area and between
  the staging area and the last commit

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  When you want to try to implement new functions but keep a working version
  ready or when you want to make different versions of a software (e.g. easy-mode).
  Or one master branch for production, one development branch, etc. etc.

How do the diagrams help you visualize the branch structure?

  It lists all the commits for the specified branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  You get the functionalities implemented in both branches. The commit gets the
  commit ids from both parents.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

  pros : you can optimize which modifications to keep when modifications were made
  on the same lines of the same file (keep the optimized version)

  cons : sometimes it'd be cool for it to make everything automatically
