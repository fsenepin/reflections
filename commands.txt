Commands :
- compare 2 commits :
    git diff (+ least recent id + most recent id)
- copy an entire git repository onto your computer (incl. history):
    git clone (+url)
- securely copy a directory from one computer to another (no history):
    git scp
- temporarily reset all files in a directory to their state at the time of a specific commit :
    git checkout
- chow the commits made in this repository, starting with the most recent :
    git log
- initializing a repository :
    git init
- show last commit and status of the repository :
    git status
- add a fie to the Staging area :
    git add
- remove a file from staging area :
    git reset (+file name)
- commit files from staging area with a commit message :
    git commit (+file name or none) -m "commit message"
- compare differences between the current directory with the staging area :
    git diff      WITHOUT any arguments
- compare differences between the staging area and the last commit in the
  git repository :
    git diff --staged
- discard any changes made in the working directory and staging area :
  (!! can't get the deleted changes back after that !!)
    git reset --hard

- show current branches :
    git branch
- create new branch :
    git branch (+ branch name)
- change branch :
    git checkout (+ branch name)
- check the repository branch structure
    git log --graph (--oneline) (+branches you want to visualize)
- create new branch AND change branch to this one :
    git checkout -b (+ branch name)
- delete a branch (only deletes the label) :
    git branch -d (+branch name)

- configure proxy :
    git config --global http.proxy http://proxyuser:proxypwd@proxy.server.com:8080
- unset proxy :
    git config --global --unset http.proxy
- check configured proxy :
    git config --global --get http.proxy
- OR for all (not just git) :

//Using Github

- see the available remote repositories of your local repository :
    git remote (+ "-v" to see actions you can have on the remote(s))
- add a remote repository of your local repository on Github : (for the remote
  name, see "fork-repository-1.png")
    git remote add (+remote repository name - e.g. "origin") (+url of the repository you created on github)
- push commits to your remote repository
    git push (+add remote repository name) (+specify the branch - e.g. "master")
- pull commits from your remote repository
    git pull (+add remote repository name) (+specify the branch - e.g. "master")
- update just the local copy of the remote branch : (to use git log and git branch to see which changes were introduced)
  ideal when you need to resolve conflicts locally, and then merge origin/master in master
    git fetch
    //git pull origin master = git fetch origin + git merge master origin/master
